setwd("~/Dropbox/Developer/thesis-scala/Policy2Filter")
library(jsonlite)
json1 <- stream_in(file("FilterOutput.dat"))
means1 <- data.matrix(json1["mean"])
plot(means1)
par(new=T)
json2 <- stream_in(file("OriginalOutput.dat"))
means2 <- data.matrix(json2["mean"])
plot(means2)
meanDif = means2-means1
m = max(max(means1),max(means2))
plot(means2,ylim=c(0,m))
points(means1)
json1 <- stream_in(file("FilterOutput.dat"))
means1 <- data.matrix(json1["mean"])
json2 <- stream_in(file("OriginalOutput.dat"))
means2 <- data.matrix(json2["mean"])
plot(means2)
meanDif = means2-means1
m = max(max(means1),max(means2))
plot(means2,ylim=c(0,m))
points(means1)
View(means1)
View(means2)
setwd("~/Dropbox/Developer/thesis-scala/Policy2Filter")
library(jsonlite)
json1 <- stream_in(file("results/10000/FilterOutput.dat"))
means1 <- data.matrix(json1["mean"])
plot(means1)
par(new=T)
View(json1)
View(json1)
json1 <- fromJSON(file("results/10000/FilterOutput.dat"))
json1.mean
json1 <- fromJSON(file("results/10000/FilterOutput.dat"))
json1
json1.mean
json1->mean
json1
json1["mean"]
hist(json1["totals"])
json1["totals"]
x = json1["totals"]
y = as.numeric(x)
unlist(x)
array(unlist(x))
y = array(unlist(x))
y
install.packages("rjson")
library(rjson)
json1 <- fromJSON(file("results/10000/FilterOutput.dat"))
install.packages("RJSONIO")
library(rjsonio)
library(RJSONIO)
json1 <- fromJSON(file("results/10000/FilterOutput.dat"))
hist(json1["totals"])
y = json1["totals"]
typeof(y)
y[1]
y[1][1]
y[[1]]
y[[1]][1]
as.numeric(y[[1]])
y2 = as.numeric(y[[1]])
typeof(y2)
hist(y2)
hist(y2, axes = TRUE)
warnings()
hist(y2, axes = TRUE)
hist(as.numeric(json1["totals"][[1]]), axes = TRUE)
json1 <- fromJSON(file("results/10000/FilterOutput.dat"))
hist(as.numeric(json1["totals"][[1]]))
json2 <- fromJson(file("results/10000/OriginalOutput"))
library(RJSONIO)
json1 <- fromJSON(file("results/10000/FilterOutput.dat"))
hist(as.numeric(json1["totals"][[1]]))
json2 <- fromJson(file("results/10000/OriginalOutput"))
json2 <- fromJSON(file("results/10000/OriginalOutput"))
json2 <- fromJSON(file("results/10000/OriginalOutput.dat"))
hist(as.numeric(json2["totals"][[1]]))
hist(as.numeric(json1["totals"][[1]]),col = blue)
hist(as.numeric(json1["totals"][[1]]),col = rgb(1,0,0,0.5))
hist(as.numeric(json2["totals"][[1]]),col=rgb(0,0,1,0.5),add=T)
max(json2["totals"][[1]]))
max(json2["totals"][[1]])
min(json1["totals"][[1]])
hist(as.numeric(json1["totals"][[1]]),col = rgb(1,0,0,0.5),ylim=c(100000,1900000))
hist(as.numeric(json1["totals"][[1]]),col = rgb(1,0,0,0.5),xlim=c(100000,1900000))
hist(as.numeric(json2["totals"][[1]]),col=rgb(0,0,1,0.5),add=T)
json1 <- fromJSON(file("results/50000/FilterOutput.dat"))
hist(as.numeric(json1["totals"][[1]]),col = rgb(1,0,0,0.5),xlim=c(100000,1900000))
json2 <- fromJSON(file("results/50000/OriginalOutput.dat"))
hist(as.numeric(json2["totals"][[1]]),col=rgb(0,0,1,0.5),add=T)
json1 <- fromJSON(file("results/10000/FilterOutput.dat"))
hist(as.numeric(json1["totals"][[1]]),col = rgb(1,0,0,0.5),xlim=c(100000,max(json2["totals"][[1]])))
json2 <- fromJSON(file("results/10000/OriginalOutput.dat"))
hist(as.numeric(json2["totals"][[1]]),col=rgb(0,0,1,0.5),add=T)
json1 <- fromJSON(file("results/10000/FilterOutput.dat"))
hist(as.numeric(json1["totals"][[1]]),col = rgb(1,0,0,0.5),xlim=c(100000,max(json2["totals"][[1]])))
json2 <- fromJSON(file("results/10000/OriginalOutput.dat"))
hist(as.numeric(json2["totals"][[1]]),col=rgb(0,0,1,0.5),add=T)
json1 <- fromJSON(file("results/50000/FilterOutput.dat"))
hist(as.numeric(json1["totals"][[1]]),col = rgb(1,0,0,0.5),xlim=c(100000,max(json2["totals"][[1]])))
json2 <- fromJSON(file("results/50000/OriginalOutput.dat"))
hist(as.numeric(json2["totals"][[1]]),col=rgb(0,0,1,0.5),add=T)
json1 <- fromJSON(file("results/50000/FilterOutput.dat"))
json2 <- fromJSON(file("results/50000/OriginalOutput.dat"))
hist(as.numeric(json1["totals"][[1]]),col = rgb(1,0,0,0.5),xlim=c(100000,max(json2["totals"][[1]])))
hist(as.numeric(json2["totals"][[1]]),col=rgb(0,0,1,0.5),add=T)
hist(as.numeric(json1["totals"][[1]]),col = rgb(1,0,0,0.5),xlim=c(min(json1["totals"][[1]])),max(json2["totals"][[1]])))
hist(as.numeric(json2["totals"][[1]]),col=rgb(0,0,1,0.5),add=T)
hist(as.numeric(json1["totals"][[1]]),col = rgb(1,0,0,0.5),xlim=c(min(json1["totals"][[1]])),max(json2["totals"][[1]])))
file1 = file("results/10000/FilterOutput.dat")
json1 <- fromJSON(file1)
close(file1)
f = file("results/10000/FilterOutput.dat")
json1 <- fromJSON(file1)
close(f)
f = file("results/10000/OriginalOutput.dat")
json2 <- fromJSON(file2)
close(f)
hist(as.numeric(json1["totals"][[1]]),col = rgb(1,0,0,0.5),xlim=c(min(json1["totals"][[1]])),max(json2["totals"][[1]])))
hist(as.numeric(json1["totals"][[1]]),col = rgb(1,0,0,0.5),xlim=c(min(json1["totals"][[1]]),max(json2["totals"][[1]])))
hist(as.numeric(json2["totals"][[1]]),col=rgb(0,0,1,0.5),add=T)
xmin = min(min(json1["totals"][[1]]),min(json2["totals"][[1]]))
xmax = max(max(json1["totals"][[1]]),max(json2["totals"][[1]]))
hist(as.numeric(json1["totals"][[1]]),col = rgb(1,0,0,0.5),xlim=c(xmin,xmax)
)
hist(as.numeric(json1["totals"][[1]]),col = rgb(1,0,0,0.5),xlim=c(xmin,xmax))
hist(as.numeric(json2["totals"][[1]]),col=rgb(0,0,1,0.5),add=T)
f = file("results/10000/FilterOutput.dat")
json1 <- fromJSON(file1)
close(f)
f = file("results/10000/OriginalOutput.dat")
json2 <- fromJSON(file2)
close(f)
xmin = min(min(json1["totals"][[1]]),min(json2["totals"][[1]]))
xmax = max(max(json1["totals"][[1]]),max(json2["totals"][[1]]))
hist(as.numeric(json1["totals"][[1]]),col = rgb(1,0,0,0.5),xlim=c(xmin,xmax))
hist(as.numeric(json2["totals"][[1]]),col=rgb(0,0,1,0.5),add=T)
f = file("results/10000/FilterOutput.dat")
json1 <- fromJSON(file1)
close(f)
f = file("results/10000/OriginalOutput.dat")
json2 <- fromJSON(file2)
f = file("results/10000/FilterOutput.dat")
json1 <- fromJSON(f)
close(f)
f = file("results/10000/OriginalOutput.dat")
json2 <- fromJSON(f)
close(f)
xmin = min(min(json1["totals"][[1]]),min(json2["totals"][[1]]))
xmax = max(max(json1["totals"][[1]]),max(json2["totals"][[1]]))
hist(as.numeric(json1["totals"][[1]]),col = rgb(1,0,0,0.5),xlim=c(xmin,xmax))
hist(as.numeric(json2["totals"][[1]]),col=rgb(0,0,1,0.5),add=T)
f = file("results/50000/FilterOutput.dat")
json1 <- fromJSON(f)
close(f)
f = file("results/50000/OriginalOutput.dat")
json2 <- fromJSON(f)
close(f)
xmin = min(min(json1["totals"][[1]]),min(json2["totals"][[1]]))
xmax = max(max(json1["totals"][[1]]),max(json2["totals"][[1]]))
hist(as.numeric(json1["totals"][[1]]),col = rgb(1,0,0,0.5),xlim=c(xmin,xmax))
hist(as.numeric(json2["totals"][[1]]),col=rgb(0,0,1,0.5),add=T)
iris
ggplot(iris, aes(x=Sepal.Length, fill=Species)) +
geom_histogram()
require(ggplot2)   # plotting library
require(reshape2)  # this is the library that lets you flatten out data
install.packages("reshape2")
install.packages("ggplot2")
ggplot(iris, aes(x=Sepal.Length, fill=Species)) +
geom_histogram()
dd <- data.frame(measure=runif(100), cat=sample(c("a","b","c"), 100, replace=T))
qplot(measure, data=dd, fill=cat, binwidth=0.2)
require(reshape2)  # this is the library that lets you flatten out data
require(ggplot2)   # plotting library
dd <- data.frame(measure=runif(100), cat=sample(c("a","b","c"), 100, replace=T))
qplot(measure, data=dd, fill=cat, binwidth=0.2)
View(dd)
bucket <- list(json1["otherDuration"][[1]],json1["serverDuration"][[1]])
x = melt(bucket)
View(x)
bucket <- list(a = json1["otherDuration"][[1]],b = json1["serverDuration"][[1]])
x = melt(bucket)
View(x)
x = c(json1["otherDuration"][[1]],json1["serverDuration"][[1]])
x
x = c(json1["otherDuration"][[1]];json1["serverDuration"][[1]])
x = json1["otherDuration"][[1]]
typeof(x)
bucket <- list(a = json1["otherDuration"][[1]],b = json1["serverDuration"][[1]])
ggplot(melt(bucket), aes(value, fill = L1)) +
geom_histogram(position = "stack", binwidth=2)
ggplot(melt(bucket), aes(value, fill = L1)) +
geom_histogram(position = "stack")
dd<-data.frame(json1["otherDuration"][[1]],json1["serverDuration"][[1]])
View(dd)
qplot(measure, data=dd, fill=cat, binwidth=0.2)
dd <- data.frame(measure=runif(100), cat=sample(c("a","b","c"), 100, replace=T))
View(dd)
bucket <- list(a = json1["otherDuration"][[1]],b = json1["serverDuration"][[1]])
dd = melt(bucket)
View(dd)
qplot(value, data=dd, fill=L1, binwidth=0.2)
qplot(value, data=dd, fill=L1)
values <- table(json1["otherDuration"][[1]],json1["serverDuration"][[1]])
values
values <- c(json1["otherDuration"][[1]],json1["serverDuration"][[1]])
x = matrix(json1["otherDuration"][[1]],json1["serverDuration"][[1]])
x = json1["otherDuration"][[1]]
data.frame(json1["otherDuration"][[1]],json1["serverDuration"][[1]])
x = data.frame(json1["otherDuration"][[1]],json1["serverDuration"][[1]])
View(x)
dd = data.frame(json1["otherDuration"][[1]],json1["serverDuration"][[1]])
barplot(dd)
dd = data.matrix(data.frame(json1["otherDuration"][[1]],json1["serverDuration"][[1]]))
barplot(dd)
View(dd)
counts <- table(mtcars$vs, mtcars$gear)
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts))
counts
dd = t(data.matrix(data.frame(json1["otherDuration"][[1]],json1["serverDuration"][[1]])))
barplot(dd)
barplot(dd, col = c("blue","red"))
dd = t(data.matrix(data.frame(json1["otherDuration"][[1]][1:100],json1["serverDuration"][[1]][1:100])))
barplot(dd, col = c("blue","red"))
barplot(dd, col = c("blue","red"), legend = rownames(dd))
dd = t(data.matrix(a = data.frame(json1["otherDuration"][[1]][1:100], b = json1["serverDuration"][[1]][1:100])))
rownames(dd) <- c("Filter calculation","server calculation")
barplot(dd, col = c("blue","red"), legend = rownames(dd))
dd = t(data.matrix(a = data.frame(json2["otherDuration"][[1]][1:100], b = json2["serverDuration"][[1]][1:100])))
dd = t(data.matrix(data.frame(json2["otherDuration"][[1]][1:100], json2["serverDuration"][[1]][1:100])))
rownames(dd) <- c("Filter calculation","server calculation")
barplot(dd, col = c("blue","red"), legend = rownames(dd))
f = file("results/10000/FilterOutput.dat")
json1 <- fromJSON(f)
close(f)
f = file("results/10000/OriginalOutput.dat")
json2 <- fromJSON(f)
close(f)
dd = t(data.matrix(data.frame(json1["otherDuration"][[1]][1:100], json1["serverDuration"][[1]][1:100])))
rownames(dd) <- c("Filter calculation","server calculation")
barplot(dd, col = c("blue","red"), legend = rownames(dd))
dd = t(data.matrix(data.frame(json2["otherDuration"][[1]][1:100], json2["serverDuration"][[1]][1:100])))
rownames(dd) <- c("Filter calculation","server calculation")
barplot(dd, col = c("blue","red"), legend = rownames(dd))
par(mfrow=c(1,2))
dd = t(data.matrix(data.frame(json1["otherDuration"][[1]][1:100], json1["serverDuration"][[1]][1:100])))
rownames(dd) <- c("Filter calculation","server calculation")
barplot(dd, col = c("blue","red"), legend = rownames(dd))
dd = t(data.matrix(data.frame(json2["otherDuration"][[1]][1:100], json2["serverDuration"][[1]][1:100])))
rownames(dd) <- c("Stapl calculation","server calculation")
barplot(dd, col = c("blue","red"), legend = rownames(dd))
ymax = max(max(json1["totals"][[1]]),max(json2["totals"][[1]]))
ymax = max(max(json1["totals"][[1]]),max(json2["totals"][[1]]))
rownames(dd) <- c("Filter calculation","server calculation")
barplot(dd, col = c("blue","red"), legend = rownames(dd),ylim=ymax)
dd = t(data.matrix(data.frame(json2["otherDuration"][[1]][1:100], json2["serverDuration"][[1]][1:100])))
rownames(dd) <- c("Stapl calculation","server calculation")
barplot(dd, col = c("blue","red"), legend = rownames(dd),ylim = ymax)
par(mfrow=c(1,2))
ymin = min(min(json1["totals"][[1]]),min(json2["totals"][[1]]))
ymax = max(max(json1["totals"][[1]]),max(json2["totals"][[1]]))
dd = t(data.matrix(data.frame(json1["otherDuration"][[1]][1:100], json1["serverDuration"][[1]][1:100])))
rownames(dd) <- c("Filter calculation","server calculation")
barplot(dd, col = c("blue","red"), legend = rownames(dd),ylim=c(ymin,ymax))
dd = t(data.matrix(data.frame(json2["otherDuration"][[1]][1:100], json2["serverDuration"][[1]][1:100])))
rownames(dd) <- c("Stapl calculation","server calculation")
barplot(dd, col = c("blue","red"), legend = rownames(dd),ylim = c(ymin,ymax))
xmin = min(min(json1["ServerDuration"][[1]]),min(json2["ServerDuration"][[1]]))
xmax = max(max(json1["ServerDuration"][[1]]),max(json2["ServerDuration"][[1]]))
xmin = min(min(json1["serverDuration"][[1]]),min(json2["serverDuration"][[1]]))
xmax = max(max(json1["serverDuration"][[1]]),max(json2["serverDuration"][[1]]))
hist(as.numeric(json1["serverDuration"][[1]]),col = rgb(1,0,0,0.5),xlim=c(xmin,xmax))
hist(as.numeric(json2["serverDuration"][[1]]),col=rgb(0,0,1,0.5),add=T)
par(mfrow=c(1,1))
xmin = min(min(json1["serverDuration"][[1]]),min(json2["serverDuration"][[1]]))
xmax = max(max(json1["serverDuration"][[1]]),max(json2["serverDuration"][[1]]))
hist(as.numeric(json1["serverDuration"][[1]]),col = rgb(1,0,0,0.5),xlim=c(xmin,xmax))
hist(as.numeric(json2["serverDuration"][[1]]),col=rgb(0,0,1,0.5),add=T)
xmin = min(min(json1["otherDuration"][[1]]),min(json2["otherDuration"][[1]]))
xmax = max(max(json1["otherDuration"][[1]]),max(json2["otherDuration"][[1]]))
hist(as.numeric(json1["otherDuration"][[1]]),col = rgb(1,0,0,0.5),xlim=c(xmin,xmax))
hist(as.numeric(json2["otherDuration"][[1]]),col=rgb(0,0,1,0.5),add=T)
xmin = min(min(json1["otherDuration"][[1]]),min(json2["otherDuration"][[1]]))
xmax = max(max(json1["otherDuration"][[1]]),max(json2["otherDuration"][[1]]))
hist(as.numeric(json1["otherDuration"][[1]]),col = "red",xlim=c(xmin,xmax))
hist(as.numeric(json2["otherDuration"][[1]]),col = "blue",add=T)
hist(as.numeric(json1["serverDuration"][[1]]),col = "red",xlim=c(xmin,xmax))
xmin = min(min(json1["otherDuration"][[1]]),min(json2["otherDuration"][[1]]))
xmax = max(max(json1["otherDuration"][[1]]),max(json2["otherDuration"][[1]]))
hist(as.numeric(json1["otherDuration"][[1]]),col = rgb(1,0,0,0.5),xlim=c(xmin,xmax))
hist(as.numeric(json2["otherDuration"][[1]]),col=rgb(0,0,1,0.5),add=T)
xmin = min(min(json1["serverDuration"][[1]]),min(json2["serverDuration"][[1]]))
xmax = max(max(json1["serverDuration"][[1]]),max(json2["serverDuration"][[1]]))
hist(as.numeric(json1["serverDuration"][[1]]),col = rgb(1,0,0,0.5),xlim=c(xmin,xmax))
hist(as.numeric(json2["serverDuration"][[1]]),col=rgb(0,0,1,0.5),add=T)
