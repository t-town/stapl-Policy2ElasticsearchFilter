setwd("~/Dropbox/Developer/thesis-scala/Policy2Filter")
f = file("results/many/0/FilterOutput.dat")
library(RJSONIO)
options(scipen=5)
#/** for the increasing number of arguments**/
#Results with filter:
f = file("results/many/0/FilterOutput.dat")
filter0 <- fromJSON(f)
close(f)
f = file("results/many/0/OriginalOutput.dat")
naive0 <- fromJSON(f)
close(f)
f = file("results/many/1/FilterOutput.dat")
filter1 <- fromJSON(f)
close(f)
f = file("results/many/1/OriginalOutput.dat")
naive1 <- fromJSON(f)
close(f)
f = file("results/many/2/FilterOutput.dat")
filter2 <- fromJSON(f)
close(f)
f = file("results/many/2/OriginalOutput.dat")
naive2 <- fromJSON(f)
close(f)
f = file("results/many/3/FilterOutput.dat")
filter3 <- fromJSON(f)
close(f)
f = file("results/many/3/OriginalOutput.dat")
naive3 <- fromJSON(f)
close(f)
f = file("results/many/4/FilterOutput.dat")
filter4 <- fromJSON(f)
close(f)
f = file("results/many/4/OriginalOutput.dat")
naive4 <- fromJSON(f)
close(f)
f = file("results/many/5/FilterOutput.dat")
filter5 <- fromJSON(f)
close(f)
f = file("results/many/5/OriginalOutput.dat")
naive5 <- fromJSON(f)
close(f)
mapf <- function(lst) {
return(mean(lst["totals"][[1]])/1000)
}
plotIncreasing <- function(filter, naive, subtitle) {
means1 = unlist(Map(mapf,filter))
means2 = unlist(Map(mapf,naive))
ymin = min(min(means1),min(means2))
ymax = max(max(means1),max(means2))
#1 million micro seconds = 1 second
plot(1:50,means1,ylim=c(0,160000),type="p",col="blue",xlab = "# attributes", ylab = "time in microseconds", main = paste("Increasing amount of resource attributes\n processing 1000 documents\n",subtitle))
par(new=T)
plot(1:50,means2,col="red",type="p",ylim=c(0,180000),xlab = '', ylab = '',xaxt = "no", yaxt = "no")
par(xpd=TRUE)
legend("top",c("new implementation","naive implementation"),col = c("blue","red"),pch="o")
}
par(mfrow=c(2,3))
par(mfrow=c(1,1))
plotIncreasing(filter0,naive0,"100 % of documents allowed")
plotIncreasing(filter0,naive0,"100 % of documents allowed")
par(new=T)
plotIncreasing(filter1,naive1,"80 % of documents allowed")
par(new=T)
plotIncreasing(filter2,naive2,"60 % of documents allowed")
par(new=T)
plotIncreasing(filter3,naive3,"40 % of documents allowed")
par(new=T)
plotIncreasing(filter4,naive4,"20 % of documents allowed")
par(new=T)
plotIncreasing <- function(filter, naive, subtitle) {
means1 = unlist(Map(mapf,filter))
means2 = unlist(Map(mapf,naive))
ymin = min(min(means1),min(means2))
ymax = max(max(means1),max(means2))
#1 million micro seconds = 1 second
plot(1:50,means1,ylim=c(0,160000),type="p",col="blue",xlab = "# attributes", ylab = "time in microseconds", main = paste("Increasing amount of resource attributes\n processing 1000 documents\n",subtitle))
par(new=T)
plot(1:50,means2,col="red",type="p",ylim=c(0,180000),xlab = '', ylab = '',xaxt = "no", yaxt = "no")
par(xpd=TRUE)
legend("top",c("new implementation","naive implementation"),col = c("blue","red"),pch="o")
}
par(mfrow=c(2,3))
par(mfrow=c(1,1))
plotIncreasing(filter0,naive0,"100 % of documents allowed")
plotIncreasing(filter1,naive1,"80 % of documents allowed")
plotIncreasing(filter0,naive0,"100 % of documents allowed")
mapf <- function(lst) {
return(mean(lst["totals"][[1]]))
}
means2 = unlist(Map(mapf,naive))
means1 = unlist(Map(mapf,filter))
plotIncreasing <- function(filter, naive, subtitle) {
ymin = min(min(means1),min(means2))
ymax = max(max(means1),max(means2))
#1 million micro seconds = 1 second
plot(1:50,means1,ylim=c(0,160000),type="p",col="blue",xlab = "# attributes", ylab = "time in microseconds", main = paste("Increasing amount of resource attributes\n processing 1000 documents\n",subtitle))
par(new=T)
plot(1:50,means2,col="red",type="p",ylim=c(0,180000),xlab = '', ylab = '',xaxt = "no", yaxt = "no")
par(xpd=TRUE)
legend("top",c("new implementation","naive implementation"),col = c("blue","red"),pch="o")
}
plotIncreasing(filter0,naive0,"100 % of documents allowed")
mapf <- function(lst) {
return(mean(lst["totals"][[1]]))
}
plotIncreasing <- function(filter, naive, subtitle) {
means1 = unlist(Map(mapf,filter))
means2 = unlist(Map(mapf,naive))
ymin = min(min(means1),min(means2))
ymax = max(max(means1),max(means2))
#1 million micro seconds = 1 second
plot(1:50,means1,ylim=c(0,160000),type="p",col="blue",xlab = "# attributes", ylab = "time in microseconds", main = paste("Increasing amount of resource attributes\n processing 1000 documents\n",subtitle))
par(new=T)
plot(1:50,means2,col="red",type="p",ylim=c(0,180000),xlab = '', ylab = '',xaxt = "no", yaxt = "no")
par(xpd=TRUE)
legend("top",c("new implementation","naive implementation"),col = c("blue","red"),pch="o")
}
par(mfrow=c(2,3))
par(mfrow=c(1,1))
plotIncreasing(filter0,naive0,"100 % of documents allowed")
par(new=T)
plotIncreasing(filter1,naive1,"80 % of documents allowed")
mapf <- function(lst) {
return(mean(lst["totals"][[1]])/10)
}
plotIncreasing <- function(filter, naive, subtitle) {
means1 = unlist(Map(mapf,filter))
means2 = unlist(Map(mapf,naive))
ymin = min(min(means1),min(means2))
ymax = max(max(means1),max(means2))
#1 million micro seconds = 1 second
par(new=T)
plot(1:50,means1,ylim=c(0,160000),type="p",col="blue",xlab = "# attributes", ylab = "time in microseconds", main = paste("Increasing amount of resource attributes\n processing 1000 documents\n",subtitle))
plot(1:50,means2,col="red",type="p",ylim=c(0,180000),xlab = '', ylab = '',xaxt = "no", yaxt = "no")
par(xpd=TRUE)
legend("top",c("new implementation","naive implementation"),col = c("blue","red"),pch="o")
}
mapf <- function(lst) {
return(mean(lst["totals"][[1]])/1000)
}
plotIncreasing <- function(filter, naive, subtitle) {
means1 = unlist(Map(mapf,filter))
means2 = unlist(Map(mapf,naive))
ymin = min(min(means1),min(means2))
#1 million micro seconds = 1 second
ymax = max(max(means1),max(means2))
plot(1:50,means1,ylim=c(0,160),type="p",col="blue",xlab = "# attributes", ylab = "time in microseconds", main = paste("Increasing amount of resource attributes\n processing 1000 documents\n",subtitle))
plot(1:50,means2,col="red",type="p",ylim=c(0,180000),xlab = '', ylab = '',xaxt = "no", yaxt = "no")
par(new=T)
legend("top",c("new implementation","naive implementation"),col = c("blue","red"),pch="o")
par(xpd=TRUE)
mapf <- function(lst) {
return(mean(lst["totals"][[1]])/1000)
}
plotIncreasing <- function(filter, naive, subtitle) {
means1 = unlist(Map(mapf,filter))
means2 = unlist(Map(mapf,naive))
ymin = min(min(means1),min(means2))
#1 million micro seconds = 1 second
ymax = max(max(means1),max(means2))
plot(1:50,means1,ylim=c(0,160),type="p",col="blue",xlab = "# attributes", ylab = "time in microseconds", main = paste("Increasing amount of resource attributes\n processing 1000 documents\n",subtitle))
par(new=T)
plot(1:50,means2,col="red",type="p",ylim=c(0,160),xlab = '', ylab = '',xaxt = "no", yaxt = "no")
par(xpd=TRUE)
legend("top",c("new implementation","naive implementation"),col = c("blue","red"),pch="o")
}
par(mfrow=c(2,3))
par(mfrow=c(1,1))
plotIncreasing(filter0,naive0,"100 % of documents allowed")
}
)
mapf <- function(lst) {
return(mean(lst["totals"][[1]])/1000)
}
plotIncreasing <- function(filter, naive, subtitle) {
means1 = unlist(Map(mapf,filter))
means2 = unlist(Map(mapf,naive))
ymin = min(min(means1),min(means2))
ymax = max(max(means1),max(means2))
#1 million micro seconds = 1 second
plot(1:50,means1,ylim=c(0,160),type="p",col="blue",xlab = "# attributes", ylab = "time in microseconds", main = paste("Increasing amount of resource attributes\n processing 1000 documents\n",subtitle))
par(new=T)
plot(1:50,means2,col="red",type="p",ylim=c(0,160),xlab = '', ylab = '',xaxt = "no", yaxt = "no")
par(xpd=TRUE)
legend("top",c("new implementation","naive implementation"),col = c("blue","red"),pch="o")
}
par(mfrow=c(2,3))
par(mfrow=c(1,1))
plotIncreasing(filter0,naive0,"100 % of documents allowed")
par(new=T)
plotIncreasing(filter1,naive1,"80 % of documents allowed")
par(new=T)
plotIncreasing(filter2,naive2,"60 % of documents allowed")
par(new=T)
plotIncreasing(filter3,naive3,"40 % of documents allowed")
par(new=T)
plotIncreasing(filter4,naive4,"20 % of documents allowed")
par(new=T)
plotIncreasing(filter5,naive5,"0 % of documents allowed")
mapf <- function(lst) {
return(median(lst["totals"][[1]])/1000)
}
plotIncreasing <- function(filter, naive, subtitle) {
means1 = unlist(Map(mapf,filter))
means2 = unlist(Map(mapf,naive))
ymin = min(min(means1),min(means2))
ymax = max(max(means1),max(means2))
#1 million micro seconds = 1 second
plot(1:50,means1,ylim=c(0,180),type="p",col="blue",xlab = "# attributes", ylab = "time in microseconds", main = paste("Increasing amount of resource attributes\n processing 1000 documents\n",subtitle))
par(new=T)
plot(1:50,means2,col="red",type="p",ylim=c(0,180),xlab = '', ylab = '',xaxt = "no", yaxt = "no")
par(xpd=TRUE)
legend("top",c("new implementation","naive implementation"),col = c("blue","red"),pch="o")
}
par(mfrow=c(2,3))
par(mfrow=c(1,1))
plotIncreasing(filter0,naive0,"100 % of documents allowed")
par(new=T)
plotIncreasing(filter1,naive1,"80 % of documents allowed")
par(new=T)
plotIncreasing(filter2,naive2,"60 % of documents allowed")
par(new=T)
plotIncreasing(filter3,naive3,"40 % of documents allowed")
par(new=T)
plotIncreasing(filter4,naive4,"20 % of documents allowed")
par(new=T)
plotIncreasing(filter5,naive5,"0 % of documents allowed")
?par
plotIncreasing <- function(filter, naive, subtitle) {
means1 = unlist(Map(mapf,filter))
means2 = unlist(Map(mapf,naive))
ymin = min(min(means1),min(means2))
ymax = max(max(means1),max(means2))
#1 million micro seconds = 1 second
plot(1:50,means1,ylim=c(0,180),type="p",pch=1,xlab = "# attributes", ylab = "time in milliseconds", main = paste("Increasing amount of resource attributes\n processing 1000 documents\n",subtitle))
par(new=T)
plot(1:50,means2,type="p",ylim=c(0,180),xlab = '', ylab = '',xaxt = "no", yaxt = "no")
par(xpd=TRUE)
legend("top",c("new implementation","naive implementation"),col = c("blue","red"),pch="o")
}
plotIncreasing(filter0,naive0,"100 % of documents allowed")
plotIncreasing(filter1,naive1,"80 % of documents allowed")
plotIncreasing <- function(filter, naive, subtitle) {
means1 = unlist(Map(mapf,filter))
means2 = unlist(Map(mapf,naive))
ymin = min(min(means1),min(means2))
ymax = max(max(means1),max(means2))
#1 million micro seconds = 1 second
plot(1:50,means1,ylim=c(0,180),type="p",pch='+',xlab = "# attributes", ylab = "time in milliseconds", main = paste("Increasing amount of resource attributes\n processing 1000 documents\n",subtitle))
par(new=T)
plot(1:50,means2,type="p",ylim=c(0,180),xlab = '', ylab = '',xaxt = "no", yaxt = "no")
par(xpd=TRUE)
legend("top",c("new implementation","naive implementation"),col = c("blue","red"),pch="o")
}
plotIncreasing(filter0,naive0,"100 % of documents allowed")
par(new=T)
plotIncreasing(filter1,naive1,"80 % of documents allowed")
par(new=T)
plotIncreasing(filter2,naive2,"60 % of documents allowed")
par(new=T)
plotIncreasing(filter3,naive3,"40 % of documents allowed")
par(new=T)
plotIncreasing(filter4,naive4,"20 % of documents allowed")
par(new=T)
plotIncreasing(filter5,naive5,"0 % of documents allowed")
plotIncreasing <- function(filter, naive, subtitle) {
means1 = unlist(Map(mapf,filter))
means2 = unlist(Map(mapf,naive))
ymin = min(min(means1),min(means2))
ymax = max(max(means1),max(means2))
#1 million micro seconds = 1 second
plot(1:50,means1,ylim=c(0,180),type="b",pch='+',xlab = "# attributes", ylab = "time in milliseconds", main = paste("Increasing amount of resource attributes\n processing 1000 documents\n",subtitle))
par(new=T)
plot(1:50,means2,type="b",ylim=c(0,180),xlab = '', ylab = '',xaxt = "no", yaxt = "no")
par(xpd=TRUE)
legend("top",c("new implementation","naive implementation"),col = c("blue","red"),pch="o")
}
par(mfrow=c(2,3))
par(mfrow=c(1,1))
plotIncreasing(filter0,naive0,"100 % of documents allowed")
par(new=T)
plotIncreasing(filter1,naive1,"80 % of documents allowed")
par(new=T)
plotIncreasing(filter2,naive2,"60 % of documents allowed")
par(new=T)
plotIncreasing(filter3,naive3,"40 % of documents allowed")
par(new=T)
plotIncreasing(filter4,naive4,"20 % of documents allowed")
par(new=T)
plotIncreasing(filter5,naive5,"0 % of documents allowed")
plotIncreasing <- function(filter, naive, subtitle) {
means1 = unlist(Map(mapf,filter))
means2 = unlist(Map(mapf,naive))
ymin = min(min(means1),min(means2))
ymax = max(max(means1),max(means2))
#1 million micro seconds = 1 second
plot(1:50,means1,ylim=c(0,180),type="b",pch='+',xlab = "# attributes", ylab = "time in milliseconds", main = paste("Increasing amount of resource attributes\n processing 1000 documents\n",subtitle))
par(new=T)
plot(1:50,means2,type="b",ylim=c(0,180),xlab = '', ylab = '',xaxt = "no", yaxt = "no")
par(xpd=TRUE)
legend("top",c("new implementation","naive implementation"),col = c("blue","red"),pch="o")
}
par(mfrow=c(2,3))
par(mfrow=c(1,1))
plotIncreasing(filter0,naive0,"100 % of documents allowed")
