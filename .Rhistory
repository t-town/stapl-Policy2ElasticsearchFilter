setwd("~/Dropbox/Developer/thesis-scala/Policy2Filter")
library(RJSONIO)
f = file("results/10000/FilterOutput.dat")
json1 <- fromJSON(f)
close(f)
f = file("results/10000/OriginalOutput.dat")
json2 <- fromJSON(f)
close(f)
xmin = min(min(json1["totals"][[1]]),min(json2["totals"][[1]]))
xmax = max(max(json1["totals"][[1]]),max(json2["totals"][[1]]))
hist(as.numeric(json1["totals"][[1]]),col = rgb(1,0,0,0.5),xlim=c(xmin,xmax))
hist(as.numeric(json2["totals"][[1]]),col=rgb(0,0,1,0.5),add=T)
par(mfrow=c(1,2))
ymin = min(min(json1["totals"][[1]]),min(json2["totals"][[1]]))
ymax = max(max(json1["totals"][[1]]),max(json2["totals"][[1]]))
dd = t(data.matrix(data.frame(json1["otherDuration"][[1]][1:100], json1["serverDuration"][[1]][1:100])))
rownames(dd) <- c("Filter calculation","server calculation")
barplot(dd, col = c("blue","red"), legend = rownames(dd),ylim=c(ymin,ymax))
dd = t(data.matrix(data.frame(json2["otherDuration"][[1]][1:100], json2["serverDuration"][[1]][1:100])))
rownames(dd) <- c("Stapl calculation","server calculation")
barplot(dd, col = c("blue","red"), legend = rownames(dd),ylim = c(ymin,ymax))
#only server / only Filter
par(mfrow=c(1,1))
xmin = min(min(json1["serverDuration"][[1]]),min(json2["serverDuration"][[1]]))
xmax = max(max(json1["serverDuration"][[1]]),max(json2["serverDuration"][[1]]))
hist(as.numeric(json1["serverDuration"][[1]]),col = rgb(1,0,0,0.5),xlim=c(xmin,xmax))
hist(as.numeric(json2["serverDuration"][[1]]),col=rgb(0,0,1,0.5),add=T)
par(mfrow=c(1,1))
xmin = min(min(json1["otherDuration"][[1]]),min(json2["otherDuration"][[1]]))
xmax = max(max(json1["otherDuration"][[1]]),max(json2["otherDuration"][[1]]))
hist(as.numeric(json1["otherDuration"][[1]]),col = rgb(1,0,0,0.5),xlim=c(xmin,xmax))
hist(as.numeric(json2["otherDuration"][[1]]),col=rgb(0,0,1,0.5),add=T)
f = file("results/100000/FilterOutput.dat")
json1 <- fromJSON(f)
close(f)
f = file("results/100000/OriginalOutput.dat")
json2 <- fromJSON(f)
close(f)
xmin = min(min(json1["totals"][[1]]),min(json2["totals"][[1]]))
xmax = max(max(json1["totals"][[1]]),max(json2["totals"][[1]]))
hist(as.numeric(json1["totals"][[1]]),col = rgb(1,0,0,0.5),xlim=c(xmin,xmax))
hist(as.numeric(json2["totals"][[1]]),col=rgb(0,0,1,0.5),add=T)
#stacked representation
par(mfrow=c(1,2))
ymin = min(min(json1["totals"][[1]]),min(json2["totals"][[1]]))
ymax = max(max(json1["totals"][[1]]),max(json2["totals"][[1]]))
dd = t(data.matrix(data.frame(json1["otherDuration"][[1]][1:100], json1["serverDuration"][[1]][1:100])))
rownames(dd) <- c("Filter calculation","server calculation")
barplot(dd, col = c("blue","red"), legend = rownames(dd),ylim=c(ymin,ymax))
dd = t(data.matrix(data.frame(json2["otherDuration"][[1]][1:100], json2["serverDuration"][[1]][1:100])))
rownames(dd) <- c("Stapl calculation","server calculation")
barplot(dd, col = c("blue","red"), legend = rownames(dd),ylim = c(ymin,ymax))
#only server / only Filter
par(mfrow=c(1,1))
xmin = min(min(json1["serverDuration"][[1]]),min(json2["serverDuration"][[1]]))
xmax = max(max(json1["serverDuration"][[1]]),max(json2["serverDuration"][[1]]))
hist(as.numeric(json1["serverDuration"][[1]]),col = rgb(1,0,0,0.5),xlim=c(xmin,xmax))
hist(as.numeric(json2["serverDuration"][[1]]),col=rgb(0,0,1,0.5),add=T)
par(mfrow=c(1,1))
xmin = min(min(json1["otherDuration"][[1]]),min(json2["otherDuration"][[1]]))
xmax = max(max(json1["otherDuration"][[1]]),max(json2["otherDuration"][[1]]))
hist(as.numeric(json1["otherDuration"][[1]]),col = rgb(1,0,0,0.5),xlim=c(xmin,xmax))
hist(as.numeric(json2["otherDuration"][[1]]),col=rgb(0,0,1,0.5),add=T)
results["10000"]["Filter"] = json1
results <- data.frame(10000.filter = json1)
results <- data.frame(10000filter = json1)
filterResults <- list()
#Naive brute force results
naiveResults <- list()
f = file("results/10000/FilterOutput.dat")
json1 <- fromJSON(f)
close(f)
f = file("results/10000/OriginalOutput.dat")
json2 <- fromJSON(f)
close(f)
filterResults$r10 <- json1
naiveResults$r10 <- json2
f = file("results/100000/FilterOutput.dat")
json1 <- fromJSON(f)
close(f)
f = file("results/100000/OriginalOutput.dat")
json2 <- fromJSON(f)
close(f)
filterResults$r100 <- json1
naiveResults$r100 <- json2
plot(filterResults$r10$mean)
plot(c(filterResults$r10$mean,filterResults$r100$mean)
)
plot(c(filterResults$r10$mean,filterResults$r100$mean,naiveResults$r10$mean,naiveResults$r100$mean))
View(dd)
data.frame(naiveResults$r10$mean)
data.frame(r10 = naiveResults$r10$mean, r100 = naiveResults$r100$mean)
naiveMeans = data.frame(r10 = naiveResults$r10$mean, r100 = naiveResults$r100$mean)
filterMeans =  data.frame(r10 = filterResults$r10$mean, r100 = filterResults$r100$mean)
lines(naiveMeans)
lines(c(10000,100000),c(filterResults$r10$mean,filterResults$r100$mean))
plot(c(10000,100000),c(filterResults$r10$mean,filterResults$r100$mean))
lines(c(10000,100000),c(filterResults$r10$mean,filterResults$r100$mean))
plot(c(10000,100000),c(filterResults$r10$mean,filterResults$r100$mean))
lines(c(10000,100000),c(filterResults$r10$mean,filterResults$r100$mean))
par(new=T)
plot(c(10000,100000),c(naiveResults$r10$mean,naiveResults$r100$mean))
lines(c(10000,100000),c(naiveResults$r10$mean,naiveResults$r100$mean))
plot(c(10000,100000),c(filterResults$r10$mean,filterResults$r100$mean))
lines(c(10000,100000),c(filterResults$r10$mean,filterResults$r100$mean))
par(new=T)
plot(c(10000,100000),c(naiveResults$r10$mean,naiveResults$r100$mean),axes=F)
lines(c(10000,100000),c(naiveResults$r10$mean,naiveResults$r100$mean))
par(new=F)
plot(c(10000,100000),c(naiveResults$r10$mean,naiveResults$r100$mean),axes=F)
lines(c(10000,100000),c(naiveResults$r10$mean,naiveResults$r100$mean))
par(new=T)
plot(c(10000,100000),c(filterResults$r10$mean,filterResults$r100$mean))
lines(c(10000,100000),c(filterResults$r10$mean,filterResults$r100$mean))
naiveMeans = c(naiveResults$r10$mean, naiveResults$r100$mean)
filterMeans = c(filterResults$r10$mean, filterResults$r100$mean)
xmin = min(min(naiveMeans),min(filtermeans))
xmin = min(min(naiveMeans),min(filterMeans))
values = c(10000,100000)
naiveMeans = c(naiveResults$r10$mean, naiveResults$r100$mean)
filterMeans = c(filterResults$r10$mean, filterResults$r100$mean)
ymin = min(min(naiveMeans),min(filterMeans))
ymax = max(max(naiveMeans),max(filterMeans))
xmin = min(values)
xmax = max(values)
plot(values,naiveMeans, xlim = c(xmin,xmax), ylim = c(ymin,ymax))
lines(values,naiveMeans)
par(new=T)
plot(values,filterMeans, xlim = c(xmin,xmax), ylim = c(ymin,ymax), xlab = '', ylab = '')
lines(values,filterMeans)
plot(values,naiveMeans, xlim = c(xmin,xmax), ylim = c(ymin,ymax), xlab = '# resources', ylab 'time in microseconds')
lines(values,naiveMeans)
par(new=T)
plot(values,filterMeans, xlim = c(xmin,xmax), ylim = c(ymin,ymax), xlab = '', ylab = '')
lines(values,filterMeans)
plot(values,naiveMeans, xlim = c(xmin,xmax), ylim = c(ymin,ymax), xlab = "# resources", ylab = "time in microseconds")
lines(values,naiveMeans)
par(new=T)
plot(values,filterMeans, xlim = c(xmin,xmax), ylim = c(ymin,ymax), xlab = '', ylab = '')
lines(values,filterMeans)
options(scipen=5)
plot(values,naiveMeans, xlim = c(xmin,xmax), ylim = c(ymin,ymax), xlab = "# resources", ylab = "time in microseconds")
lines(values,naiveMeans)
par(new=T)
plot(values,filterMeans, xlim = c(xmin,xmax), ylim = c(ymin,ymax), xlab = '', ylab = '')
lines(values,filterMeans)
par(new=F)
plot(values,naiveMeans, xlim = c(xmin,xmax), ylim = c(ymin,ymax), xlab = "# resources", ylab = "time in microseconds")
lines(values,naiveMeans)
axis(2,at=marks,labels=marks)
par(new=T)
plot(values,filterMeans, xlim = c(xmin,xmax), ylim = c(ymin,ymax), xlab = '', ylab = '')
lines(values,filterMeans)
par(new=F)
marks
axis(2,at=values,labels=values)
plot(values,naiveMeans, xlim = c(xmin,xmax), ylim = c(ymin,ymax), xlab = "# resources", ylab = "time in microseconds")
lines(values,naiveMeans)
axis(1,at=values,labels=values)
type="l")
plot(values,naiveMeans,
xlim = c(xmin,xmax),
ylim = c(ymin,ymax),
xlab = "# resources",
ylab = "time in microseconds",
type="l")
plot(values,filterMeans, xlim = c(xmin,xmax), ylim = c(ymin,ymax), xlab = '', ylab = '',type='l')
plot(values,naiveMeans,
xlim = c(xmin,xmax),
ylim = c(ymin,ymax),
xlab = "# resources",
ylab = "time in microseconds",
type="l",
xaxt="n")
axis(1,at=values,labels=values)
par(new=T)
plot(values,filterMeans, xlim = c(xmin,xmax), ylim = c(ymin,ymax), xlab = '', ylab = '',type='l')
par(new=F)
plot(values,filterMeans, xlim = c(xmin,xmax), ylim = c(ymin,ymax), xlab = '', ylab = '',type='l', xaxt = "no", yaxt = "no")
plot(values,naiveMeans,
xlim = c(xmin,xmax),
ylim = c(ymin,ymax),
xlab = "# resources",
ylab = "time in microseconds",
type="l",
xaxt="n")
axis(1,at=values,labels=values)
par(new=T)
plot(values,filterMeans, xlim = c(xmin,xmax), ylim = c(ymin,ymax), xlab = '', ylab = '',type='l', xaxt = "no", yaxt = "no")
par(new=F)
plot(values,filterMeans, xlim = c(xmin,xmax), ylim = c(ymin,ymax), xlab = '', ylab = '',type='l', xaxt = "no", yaxt = "no", col = "red")
plot(values,naiveMeans,
xlim = c(xmin,xmax),
ylim = c(ymin,ymax),
xlab = "# resources",
ylab = "time in microseconds",
type="l",
xaxt="n",
col = "blue")
axis(1,at=values,labels=values)
par(new=T)
plot(values,filterMeans, xlim = c(xmin,xmax), ylim = c(ymin,ymax), xlab = '', ylab = '',type='l', xaxt = "no", yaxt = "no", col = "red")
par(new=F)
